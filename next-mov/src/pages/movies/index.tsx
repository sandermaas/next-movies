import type { GetServerSideProps, InferGetServerSidePropsType, NextPage } from 'next'
import Head from 'next/head'
import Link from 'next/link'

import Api from 'api'
import { useMovies } from 'hooks'
import { MoviesContextProvider } from 'context/MoviesContext'

import MoviesQuery from 'containers/MoviesQuery'
import { useState } from 'react'
import Random from 'components/Random'

export const getServerSideProps: GetServerSideProps = async (context) => {
  const paginatedMoviesResponse = await Api.getMovies()

  return {
    props: {
      movies: paginatedMoviesResponse.data
    }
  }
}

const Movies: NextPage = ({ movies }: InferGetServerSidePropsType<typeof getServerSideProps>) => {
  // const moviesQuery = useMovies(movies)

  // console.log(moviesQuery)

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <MoviesContextProvider>
        <p>MOVIES</p>
        <Random />
      </MoviesContextProvider>

      

      <div>
        <MoviesQuery render={(movies) => (
          <div>
            {movies.docs.map((movieDoc) => (
              <Link href={`/movies/${movieDoc._id}`}>
                <a>
                  <p>{movieDoc.title}</p>
                  <p>{movieDoc.director}</p>
                </a>
              </Link>
            ))}
          </div>
        )} />
      </div>
    </div>
  )
}

export default Movies
